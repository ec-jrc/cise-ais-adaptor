#
# Copyright CISE AIS Adaptor (c) 2018-2019, European Union
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the <organization> nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

##
## Property file to configure the AIS Adaptor for CISE
##
# This is the address of the gateway to send the messages to.
# The protocol used will be REST and at the moment there is no SOAP support.
gateway.address=http://localhost:18080/sim-EGN/rest/CISEMessageServiceREST

# This property selects which context will be used in the adaptor application.
# The context is needed to define the source type of the AIS information.
# These data may be read from a file in the filesystem or from a tcp socket
# open in some server and there is also a context that support a simple
# authentication protocol over the Tcp socket as an example.
# The default is file.
#app-context.type=tcp
#app-context.type=auth-tcp
app-context.type=file

# The character used to delimit the AIS stream. The default value is
# a CR/LF but the it's possible to configure it otherwise.
ais-source.delimiter.char=\n

# Possible values are:
#
# - STRIP
# - KEEP
#
# By default the delimiter character is stripped by the AIS stream flow
# of information (i.e. the CR/LF chars are not present in the AIS message
# string passed to the ais-domain module. It's possible to keep the delimiter
# when using a char that is part of the stream as a delimiter.
#
# Example:
#   !MSG1111!MSG2222!MSG3333
#
#   using delimiterChar=! and delimiterType=KEEP would generate a stream of string like this:
#   "!MSG1111" "!MSG2222" "!MSG3333"
#
#   while using delimiterChar=! and delimiterType=STRIP would end up with:
#   "MSG1111" "MSG2222" "MSG3333"
#
ais-source.delimiter.type=STRIP

## When using the "ais.context=file" property (AisFileStreamGenerator)
#
# The following property specify the filename where is possible to find the
# AIS strings. The file will be searched in the <AIS_HOME>/conf directory
ais-source.file.name=example.ais.stream.txt
#####

## When using the "ais.context=tcp" property (AisTcpStreamGenerator)
## and the "ais.context=auth-tcp" property (AuthTcpStreamGenerator)
#
# In this case there is a server at `host` that can be contacted at `port`
# that will stream the AIS information through a socket connection
ais-source.socket.host=localhost
ais-source.socket.port=64738
#####

## ONLY when using the AuthTcpStreamGenerator ##
# In addition to the previous configurations this configuration are needed
# when there is the need of authentication over the socket connection with
# a simple authentication string containing username and password
ais-source.login.username=admin
ais-source.login.password=secret

# The string will be formatted as per the request.template and the socket
# will send a response equals to the success.template
# In this example the AuthTcpStreamGenerator will send to the socket the
# string "AUTH=admin:secret" and will receive "AUTH-SUCCESS" as a response
ais-source.login.request.template=AUTH=%s:%s
ais-source.login.success.template=AUTH-SUCCESS
####

# This configurations are needed in case to access the ais data will be used
# the SocketAISSource class
# ais-source.socket.host=localhost
# ais-source.socket.port=8080
# In the JRC demo environment the IMO number in our mock legacy system
# is mandatory while the AIS messages has only the MMSI. Therefore to allow
# the adaptor to be fully functional in the CISE demo environment we created
# this flag to copy the MMSI number to the IMO number in the CISE Message
demo-environment=false

# If this property is set the timestamp of the CISE message will contain
# the processing time (so the current timestamp) instead of preserving the
# one found in the AIS message
override-timestamps=false

# This is a delay introduced to avoid to flood the gateway with too many
# messages per second. The value 0 does not introduce eny delay and the
# unit of measure is MILLISECONDS
processing.idle.time=500

# A CISE Message can contain a list of entities (Vessel in this case). This
# property wait to have at least the specified number of entities before
# composing and sending the message
processing.entities-per-message=1

# If the processing.entities-per-message is > 1 it means that messages will be
# sent only when the number of entities will reach that number.
# The timeout property is needed to avoid that a message stays in a buffer
# without being sent because is waiting to reach the number of entities to
# complete the buffer.
# The unit of measure is specified with the following convention in time units:
#
#   ns, nano, nanos, nanosecond, nanoseconds
#   us, Âµs, micro, micros, microsecond, microseconds
#   ms, milli, millis, millisecond, milliseconds
#   s, second, seconds
#   m, minute, minutes
#   h, hour, hours
#   d, day, days
#
# Example of valid expressions:
#
#   100ns
#   3 m
#   1 hour
#   20s
processing.sending.timeout=1 second

##
## Sender Profile Information
##
# The sender service id that will be specified in the outgoing cise message
sender.service.id=fr.ais-node01.vessel.push.provider

# Data Freshness possible values:
# - RealTime
# - NearlyRealTime
# - Unknown
# - Historic
sender.service.data-freshness-type=NearlyRealTime

# Sea Basin possible values:
# - Atlantic
# - ArcticOcean
# - NonSpecified
# - BalticSea
# - OutermostRegions
# - NorthSea
# - Mediterranean
# - BlackSea
sender.service.sea-basin-type=Mediterranean

# URL of the Legacy System running the AISAdaptor
sender.service.participant.url=http://localhost:8080/api/messages

# Service Operation possible values:
# - Push
# - Subscribe
sender.service.operation=Push

# In case of operation type 'Subscribe' the following property is needed
# to be put as a serviceId in the recipient field.
# Even if in the documentation for the national procurement is
# clearly written that a recipient shall not be set when sending a publishing
# message, the SIMulator doesn't accept a message without a valid recipient
# nor a DiscoveryProfile. So this subscription.service.id will be the serviceId
# of a service of type VesselService with role Consumer defined in the same
# Public Authority that is sending the Publish message
subscription.service.id=it.gc-ls01.vessel.push.gcs07

# Legal Name
organization.legal-name=Organization Legal Name

# Alternative Name
organization.alternative-name=Organization Alternative Name

# Message Priority possible values:
# - High
# - Low
# - Medium
message.priority=Low

# Message Security Level possible values:
# - EURestricted
# - NonSpecified
# - EUSecret
# - NonClassified
# - EUConfidential
# - EUTopSecret
message.security-level=NonClassified

# Message Sensitivity
# - Amber
# - White
# - NonSpecified
# - Green
# - Red
message.sensitivity=NonSpecified

# Message Purpose possible values:
# - CustomsMonitoring
# - EnvironmentMonitoring
# - LawEnforcementMonitoring
# - FisheriesWarning
# - SAR
# - BorderOperation
# - CounterTerrorism
# - VTM
# - CSDPTask
# - DefenceMonitoring
# - BorderMonitoring
# - NonSpecified
# - EnvironmentWarning
# - Security
# - FisheriesMonitoring
# - LawEnforcementOperation
# - FisheriesOperation
# - Operation
# - CustomsOperation
# - EnvironmentResponse
# - Safety
message.purpose=BorderMonitoring

##
## ServiceProfiles definitions
##
# To define a list of service profile is necessary to create a list of service
# profile fields with the following format:
#
#   profile.YYY.FILED={value}
#
# where YYY is a progressive number starting from 0 that defines a specific
# profile. So all the properties related to the first profile will be in
# profile.0.FIELD, while the one of the second will be profile.1.FIELD
#
# The properties that can be specified are:
#
#   service_id
#   community
#   country
#   data_freshness
#   function
#   sea_basin
#   service_operation
#   service_role
#   service_type
#
# The last three, if omitted will be set to three default values that cope
# with the sending of messages to VesselService push consumer services.

#- First ServiceProfile (Sample) ---
# This service profiles specifies a single id of a (not existent) greek vessel
# service
#
profile.0.service_id=eu.cise.greek.push.consumer.id2

#- Second ServiceProfile (Sample) ---
# This profile target the message to all the italian fisheries
profile.1.community=FisheriesControl
profile.1.country=IT

# keys to configure the signature certificates and keys

# The name of the file of the keystore
signature.keystore.name=adaptor.jks

# The password to open the keystore
signature.keystore.password=cisecise

# The alias is the one found in the keystore in order to load the private key
# of the adaptor.
signature.private-key.alias=sim1-node01.node01.eucise.fr

# This is the password to access the private key of the adaptor
signature.private-key.password=cisecise

